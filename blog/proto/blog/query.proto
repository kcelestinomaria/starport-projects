// proto/blog/query.proto
syntax = "proto3";
package example.blog.blog;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "blog/post.proto

option go_package = "github.com/example/blog/x/blog/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
    rpc Post(QueryGetPostRequest) returns (QueryGetPostRequest) {
            option (google.api.http).get = "/example/blog/blog/post/{id}";
    }
    rpc PostAll(QueryAllPostRequest) returns (QueryAllPostResponse) {
            option (google.api.http).get = "/example/blog/blog/post";
    }
}


// this line is used by starport scaffolding # 3
message QueryAllPostRequest {
        string id = 1;
}

message QueryGetPostRequest {
        Post Post = 1;
}

message QueryAllPostResponse {
        cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
        repeated Post Post = 1;
        cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// In this, our proto file, we've defined
// the structure of the API endpoint,
// as well as our request and response structure
// of the post
